{"version":3,"file":"static/js/835.3da44525.chunk.js","mappings":"6UAEaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,qEAIVE,EAAQF,EAAAA,GAAAA,MAAH,sGAMLG,EAASH,EAAAA,GAAAA,OAAH,yPAaNI,GAAQJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,yHAQLM,EAAeN,EAAAA,GAAAA,IAAH,wGAOZO,EAAMP,EAAAA,GAAAA,IAAH,oG,mIC1BVQ,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAAaE,QAAQC,WAC5BC,SAAUJ,EAAAA,KAAaK,IAAI,GAAGC,IAAI,IAAIH,aAGlCI,EAAgB,CACpBL,MAAO,GACPE,SAAU,IAGG,SAASI,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,SAAC,KAAD,CACEH,cAAeA,EACfI,iBAAkBZ,EAClBa,SATkB,SAACC,EAAD,GAA2B,IAAjBC,EAAgB,EAAhBA,UAC9BL,GAASM,EAAAA,EAAAA,IAAMF,IACfC,GACD,EAGC,SAKG,gBAAGE,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,QAASC,EAA7B,EAA6BA,MAA7B,OACC,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,QAAQ,QAAf,oBACA,UAAC,KAAD,WACG,KACD,SAAC,KAAD,CAAOC,GAAG,QAAQC,KAAK,QAAQC,YAAY,uBAC1CP,EAAOd,OAASe,EAAQf,QACvB,SAAC,KAAD,UAAec,EAAOd,YAG1B,SAAC,KAAD,CAAOkB,QAAQ,WAAf,uBACA,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,GAAG,WAAWC,KAAK,WAAWC,YAAY,mBAChDP,EAAOZ,UAAYa,EAAQb,WAC1B,SAAC,KAAD,UAAeY,EAAOZ,eAG1B,SAAC,KAAD,CAAQoB,KAAK,SAASC,UAAWP,IAAYC,EAA7C,sBAjBH,GAwBN,CC5Dc,SAASO,IACtB,OAAO,SAAClB,EAAD,GACR,C","sources":["components/FormContact/FormContact.styled.js","components/FormLogin/FormLogin.jsx","pages/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field } from 'formik';\nexport const SubmitForm = styled(Form)`\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\nexport const Label = styled.label`\n  display: block;\n  margin-left: auto;\n  padding: 5px;\n  font-size: 20px;\n`;\nexport const Button = styled.button`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 10px;\n  padding: 10px;\n  font-size: 20px;\n  cursor: pointer;\n  background-color: lightblue;\n  border-radius: 5px;\n  :hover {\n    background-color: aqua;\n  }\n`;\nexport const Input = styled(Field)`\n  width: 350px;\n  padding: 5px;\n  font-size: 16px;\n  border-radius: 4px;\n  cursor: pointer;\n`;\n\nexport const ErrorMessage = styled.div`\n  padding-top: 10px;\n  font-size: 18px;\n  text-align: center;\n  color: red;\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n  line-height: 0.6;\n  gap: 10px;\n`;\n","import {\n  Label,\n  Input,\n  Button,\n  SubmitForm,\n  ErrorMessage,\n  Box,\n} from '../FormContact/FormContact.styled';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport { logIn } from 'redux/auth/authOperations';\n\nconst schema = Yup.object().shape({\n  email: Yup.string().email().required(),\n  password: Yup.string().min(6).max(32).required(),\n});\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nexport default function FormLogin() {\n  const dispatch = useDispatch();\n\n  const onSubmitInner = (value, { resetForm }) => {\n    dispatch(logIn(value));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={onSubmitInner}\n    >\n      {({ errors, touched, isValid, dirty }) => (\n        <SubmitForm>\n          <Label htmlFor=\"email\">email</Label>\n          <Box>\n            {' '}\n            <Input id=\"email\" name=\"email\" placeholder=\"Enter email number\" />\n            {errors.email && touched.email && (\n              <ErrorMessage>{errors.email}</ErrorMessage>\n            )}\n          </Box>\n          <Label htmlFor=\"password\">password</Label>\n          <Box>\n            <Input id=\"password\" name=\"password\" placeholder=\"Enter password\" />\n            {errors.password && touched.password && (\n              <ErrorMessage>{errors.password}</ErrorMessage>\n            )}\n          </Box>\n          <Button type=\"submit\" disabled={!isValid || !dirty}>\n            Submit\n          </Button>\n        </SubmitForm>\n      )}\n    </Formik>\n  );\n}\nFormLogin.propTypes = {\n  name: PropTypes.string,\n  email: PropTypes.number,\n};\n","import FormLogin from \"components/FormLogin/FormLogin\";\n\nexport default function Registration() {\n  return <FormLogin />;\n}\n"],"names":["SubmitForm","styled","Form","Label","Button","Input","Field","ErrorMessage","Box","schema","Yup","shape","email","required","password","min","max","initialValues","FormLogin","dispatch","useDispatch","validationSchema","onSubmit","value","resetForm","logIn","errors","touched","isValid","dirty","htmlFor","id","name","placeholder","type","disabled","Registration"],"sourceRoot":""}