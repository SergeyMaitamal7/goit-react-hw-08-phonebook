{"version":3,"file":"static/js/538.9675a948.chunk.js","mappings":"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","sources":["components/Section/Section.styled.js","components/Section/Section.jsx","components/App/App.styled.js","components/FormContact/FormContact.styled.js","redux/contacts/selector.js","components/FormContact/FormContact.jsx","components/Contact/Contact.styled.js","components/Contact/Contact.jsx","components/RenderContacts/RenderContacts.styled.js","components/RenderContacts/RenderContacts.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\nexport const Section = styled.div`\n  display: flex;\n  padding: 20px;\n \n`;\n\nexport const Title = styled.h2`\n  display: block;\n  text-align: center;\n  margin: 0;\n`;\n","import { Title } from './Section.styled';\nimport PropTypes from 'prop-types';\n\nexport default function Section({ title, children }) {\n  return (\n    <>\n      <Title>{title}</Title>\n      {children}\n    </>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin: 0;\n  padding: 0;\n  margin-top: 100px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 500px;\n  padding: 10px;\n  border-radius: 1px;\n  border: 1px solid gray;\n  background-color: aliceblue;\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div``;\n\nexport const Form = styled.form`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 440px;\n`;\nexport const Label = styled.label`\n  display: block;\n  margin-left: 30px;\n  padding: 10px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 80%;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 5px;\n  font-size: 16px;\n  border-radius: 4px;\n  cursor: pointer;\n`;\n\nexport const Box = styled.div`\n  margin-top: 20px;\n  margin-left: 160px;\n`;\n// import { Form, Field } from 'formik';\n// export const SubmitForm = styled(Form)`\n//   margin-top: 10px;\n//   margin-bottom: 10px;\n// `;\n// export const Label = styled.label`\n//   display: block;\n//   margin-left: auto;\n//   padding: 5px;\n//   font-size: 20px;\n// `;\n// export const Button = styled.button`\n//   margin-left: auto;\n//   margin-right: auto;\n//   margin-top: 10px;\n//   padding: 10px;\n//   font-size: 20px;\n//   cursor: pointer;\n//   background-color: lightblue;\n//   border-radius: 5px;\n//   :hover {\n//     background-color: aqua;\n//   }\n// `;\n// export const Input = styled(Field)`\n//   width: 350px;\n//   padding: 5px;\n//   font-size: 16px;\n//   border-radius: 4px;\n//   cursor: pointer;\n// `;\n\n// export const ErrorMessage = styled.div`\n//   padding-top: 10px;\n//   font-size: 18px;\n//   text-align: center;\n//   color: red;\n// `;\n\n// export const Box = styled.div`\n//   display: flex;\n//   margin-bottom: 20px;\n//   line-height: 0.6;\n//   gap: 10px;\n// `;\n","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.filters;\n","import { Container, Form, Label, Input, Box } from './FormContact.styled';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'redux/contacts/selector';\nimport { addContact } from 'redux/contacts/operation';\nimport Notiflix from 'notiflix';\nimport Button from '@mui/material/Button';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleClickChange = e => {\n    const { name, value } = e.currentTarget;\n    if (name === 'name') {\n      setName(value);\n      return;\n    }\n    if (name === 'number') {\n    }\n    setNumber(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const filterName = contacts.find(contact => contact.name === name);\n    if (filterName) {\n      Notiflix.Notify.failure(\n        `You have already added ${name} to Contact list!!!`\n      );\n      return;\n    }\n    dispatch(\n      addContact({\n        name,\n        number,\n      })\n    );\n    resetForm();\n  };\n\n  const resetForm = e => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Container>\n      <Form onSubmit={handleSubmit}>\n        <Label htmlFor=\"name\">Name</Label>\n        <Input\n          id=\"name\"\n          type=\"text\"\n          name=\"name\"\n          onChange={handleClickChange}\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <Label htmlFor=\"number\">Number</Label>\n        <Input\n          id=\"number\"\n          type=\"tel\"\n          name=\"number\"\n          onChange={handleClickChange}\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <Box>\n          <Button type=\"submit\" variant=\"contained\">\n            Add contact\n          </Button>\n        </Box>\n      </Form>\n    </Container>\n  );\n}\nContactForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n\n// import {\n//   Label,\n//   Input,\n//   Button,\n//   SubmitForm,\n//   ErrorMessage,\n//   Box,\n// } from '../FormContact/FormContact.styled';\n// import * as Yup from 'yup';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { getContacts } from 'redux/contacts/selector';\n// import { addContact } from 'redux/contacts/operation';\n// import Notiflix from 'notiflix';\n// import PropTypes from 'prop-types';\n// import { Formik } from 'formik';\n\n// const initialValues = {\n//   name: '',\n//   number: '',\n// };\n// const schema = Yup.object().shape({\n//   name: Yup.string().email().required(),\n//   number: Yup.string().min(6).max(32).required(),\n// });\n\n// export default function ContactForm() {\n//   const contacts = useSelector(getContacts);\n//   const dispatch = useDispatch();\n\n//   const onSubmit = ({ name, number }) => {\n//     const filterName = contacts.find(contact => contact.name === name);\n//     if (filterName) {\n//       Notiflix.Notify.failure(\n//         `You have already added ${name} to Contact list!!!`\n//       );\n//       return;\n//     }\n//     dispatch(\n//       addContact({\n//         name,\n//         number,\n//       })\n//     );\n//   };\n\n//   const onSubmitInner = (value, { resetForm }) => {\n//     onSubmit(value);\n//     resetForm();\n//   };\n\n//   return (\n//     <Formik\n//       initialValues={initialValues}\n//       validations={schema}\n//       onSubmit={onSubmitInner}\n//     >\n//       {({ errors, touched, isValid, dirty }) => (\n//         <SubmitForm>\n//           <Label htmlFor=\"name\">name</Label>\n//           <Box>\n//             <Input\n//               type=\"text\"\n//               id=\"name\"\n//               name=\"name\"\n//               placeholder=\"Enter Name\"\n//               required\n//             />\n//             {errors.name && touched.name && (\n//               <ErrorMessage>{errors.name}</ErrorMessage>\n//             )}\n//           </Box>\n\n//           <Label htmlFor=\"number\"> number</Label>\n//           <Box>\n//             {' '}\n//             <Input\n//               type=\"tel\"\n//               id=\" number\"\n//               name=\" number\"\n//               placeholder=\"Enter phone number\"\n//               required\n//             />\n//             {errors.number && touched.number && (\n//               <ErrorMessage>{errors.number}</ErrorMessage>\n//             )}\n//           </Box>\n//           <Button type=\"submit\" disabled={!isValid || !dirty}>\n//             Submit\n//           </Button>\n//         </SubmitForm>\n//       )}\n//     </Formik>\n//   );\n// }\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n  font-size: 18px;\n`;\n\nexport const Contact = styled.p`\n  font-family: 'Poboto';\n  font-weight: 600px;\n`;\n","import { Contact } from './Contact.styled';\nimport PropTypes from 'prop-types';\n\nexport default function ItemContact ({ contact }) {\n console.log(contact)\n  return (\n    <>\n      <Contact type=\"button\" name={contact.name}>\n        {contact.name} : {contact.number}\n      </Contact>\n    </>\n  );\n};\n\nItemContact.prototype = {\n  contacts: PropTypes.objectOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 0;\n`;\nexport const Wrapper = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n  font-size: 18px;\n`;\n\n","import ItemContact from 'components/Contact/Contact';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact, fetchContacts } from '../../redux/contacts/operation';\nimport { List, Wrapper } from './RenderContacts.styled';\nimport { Button } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport { getContacts, getFilter } from 'redux/contacts/selector';\n\nexport default function RenderContacts() {\n  const contacts = useSelector(getContacts);\n  const filters = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filters.toLowerCase())\n  );\n\n  return (\n    <List>\n      {visibleContacts.map(contact => (\n        <Wrapper key={contact.id}>\n          <ItemContact contact={contact}></ItemContact>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"error\"\n            onClick={() => dispatch(deleteContact(contact.id))}\n          >\n            Delete\n          </Button>\n        </Wrapper>\n      ))}\n    </List>\n  );\n}\n\nRenderContacts.prototype = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n    })\n  ),\n  replaceContact: PropTypes.func,\n  deleteContact: PropTypes.func,\n};\n","import styled from 'styled-components';\nexport const Title = styled.h2`\n  display: block;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 500;\n`;\nexport const Input = styled.input`\n  display: block;\n  width: 350px;\n  margin-left: 25px;\n  padding: 5px;\n  font-size: 16px;\n  border-radius: 4px;\n  cursor: pointer;\n`;\n","import { Label } from 'components/FormContact/FormContact.styled';\nimport { Title, Input } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const changeFilter = e => {\n    const filter = e.currentTarget.value;\n    dispatch(setFilter(filter));\n  };\n\n  return (\n    <>\n      <Label>\n        <Title>Find contacts by name:</Title>\n        <Input type=\"text\" onChange={changeFilter} />\n      </Label>\n    </>\n  );\n}\n","import { Container } from 'components/App/App.styled';\nimport ContactForm from 'components/FormContact/FormContact';\nimport Section from 'components/Section/Section';\nimport RenderContacts from 'components/RenderContacts/RenderContacts';\nimport Filter from 'components/Filter/Filter';\nexport default function Contacts() {\n  return (\n    <Container>\n      <Section title=\"Phonebook\">\n        <ContactForm></ContactForm>\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <RenderContacts />\n      </Section>\n    </Container>\n  );\n}\n"],"names":["Title","styled","Section","title","children","Container","Form","Label","Input","Box","getContacts","state","contacts","items","getFilter","filters","ContactForm","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","handleClickChange","e","currentTarget","value","resetForm","onSubmit","preventDefault","find","contact","Notiflix","addContact","htmlFor","id","type","onChange","pattern","required","Button","variant","Contact","ItemContact","console","log","prototype","PropTypes","List","Wrapper","RenderContacts","useEffect","fetchContacts","visibleContacts","filter","toLowerCase","includes","map","color","onClick","deleteContact","replaceContact","Filter","setFilter","Contacts"],"sourceRoot":""}