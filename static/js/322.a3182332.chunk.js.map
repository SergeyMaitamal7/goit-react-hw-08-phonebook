{"version":3,"file":"static/js/322.a3182332.chunk.js","mappings":"+QAGaA,EAAQC,EAAAA,GAAAA,GAAH,qEAILC,EAAYD,EAAAA,GAAAA,KAAH,yCAGTE,EAAOF,EAAAA,GAAAA,KAAH,0BAIJG,EAAMH,EAAAA,GAAAA,IAAH,mN,6FCXHI,E,QAAeJ,GAAAA,GAAH,qE,qECOnBK,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,KAAMF,EAAAA,KAAaG,IAAI,GAAGC,IAAI,IAAIC,WAClCC,MAAON,EAAAA,KAAaM,QAAQD,WAC5BE,SAAUP,EAAAA,KAAaG,IAAI,GAAGC,IAAI,IAAIC,aAGzB,SAASG,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbX,KAAM,GACNI,MAAO,GACPC,SAAU,IAEZR,iBAAkBA,EAClBe,SAAU,SAAAC,GACRN,GAASO,EAAAA,EAAAA,IAASD,GACnB,IAGH,OACE,UAAC,KAAD,YACE,SAAC,KAAD,WACE,SAACjB,EAAD,0BAEF,UAAC,KAAD,CAAMgB,SAAUH,EAAOM,aAAvB,WACE,SAACC,EAAA,EAAD,CACEC,GAAG,OACHjB,KAAK,OACLkB,MAAM,OACNC,YAAY,kBACZC,OAAO,OACPC,WAAS,EACTC,GAAI,CACFC,OAAQ,GACRC,aAAc,GAEhBC,MAAOhB,EAAOI,OAAOb,KACrB0B,SAAUjB,EAAOkB,aACjBC,MAAOnB,EAAOoB,QAAQ7B,MAAQ8B,QAAQrB,EAAOsB,OAAO/B,MACpDgC,WAAYvB,EAAOoB,QAAQ7B,MAAQS,EAAOsB,OAAO/B,QAEnD,SAACgB,EAAA,EAAD,CACEC,GAAG,QACHjB,KAAK,QACLkB,MAAM,QACNC,YAAY,mBACZC,OAAO,OACPC,WAAS,EACTC,GAAI,CACFC,OAAQ,GACRC,aAAc,GAEhBC,MAAOhB,EAAOI,OAAOT,MACrBsB,SAAUjB,EAAOkB,aACjBC,MAAOnB,EAAOoB,QAAQzB,OAAS0B,QAAQrB,EAAOsB,OAAO3B,OACrD4B,WAAYvB,EAAOoB,QAAQzB,OAASK,EAAOsB,OAAO3B,SAEpD,SAACY,EAAA,EAAD,CACEC,GAAG,WACHjB,KAAK,WACLkB,MAAM,WACNe,KAAK,WACLd,YAAY,sBACZC,OAAO,OACPC,WAAS,EACTC,GAAI,CACFC,OAAQ,GACRC,aAAc,GAEhBC,MAAOhB,EAAOI,OAAOR,SACrBqB,SAAUjB,EAAOkB,aACjBC,MAAOnB,EAAOoB,QAAQxB,UAAYyB,QAAQrB,EAAOsB,OAAO1B,UACxD2B,WAAYvB,EAAOoB,QAAQxB,UAAYI,EAAOsB,OAAO1B,YAEvD,SAAC6B,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAAQ,YAAYf,WAAS,EAACY,KAAK,SAA3D,2BAMP,CC3Fc,SAASI,IACtB,OAAO,SAAC/B,EAAD,GACR,C","sources":["components/FormLogin/FormLogin.styled.js","components/FormRegisration/FormRegistration.styled.js","components/FormRegisration/FormRegistration.jsx","pages/Registaration.jsx"],"sourcesContent":["import styled from 'styled-components';\n\n\nexport const Login = styled.h2`\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const Container = styled.span`\n display: flex;\n`;\nexport const Form = styled.form`\n\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 100px;\n  margin-bottom: 10px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 440px;\n  line-height: 0.6;\n  gap: 10px;\n`;\n","import styled from 'styled-components';\n\n\nexport const Registrarion = styled.h2`\n  margin-left: auto;\n  margin-right: auto;\n`;","import { Form, Box, Container } from '../FormLogin/FormLogin.styled';\nimport { Registrarion } from './FormRegistration.styled';\nimport { Button } from '@mui/material';\nimport TextField from '@mui/material/TextField';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/authOperations';\nimport { useFormik } from 'formik';\nimport PropTypes from 'prop-types';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string().min(3).max(16).required(),\n  email: Yup.string().email().required(),\n  password: Yup.string().min(6).max(32).required(),\n});\n\nexport default function FormRegistration() {\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      dispatch(register(values));\n    },\n  });\n\n  return (\n    <Box>\n      <Container>\n        <Registrarion>Register</Registrarion>\n      </Container>\n      <Form onSubmit={formik.handleSubmit}>\n        <TextField\n          id=\"name\"\n          name=\"name\"\n          label=\"Name\"\n          placeholder=\"Enter your name\"\n          margin=\"none\"\n          fullWidth\n          sx={{\n            height: 50,\n            marginBottom: 3,\n          }}\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          error={formik.touched.name && Boolean(formik.errors.name)}\n          helperText={formik.touched.name && formik.errors.name}\n        />\n        <TextField\n          id=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          placeholder=\"Enter your email\"\n          margin=\"none\"\n          fullWidth\n          sx={{\n            height: 50,\n            marginBottom: 3,\n          }}\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <TextField\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          placeholder=\"Enter your password\"\n          margin=\"none\"\n          fullWidth\n          sx={{\n            height: 50,\n            marginBottom: 3,\n          }}\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n        <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n          Register\n        </Button>\n      </Form>\n    </Box>\n  );\n}\nFormRegistration.propTypes = {\n  name: PropTypes.string,\n  email: PropTypes.string,\n  password: PropTypes.string,\n};\n\n// import { Form, Label, Input, Button } from '../FormContact/FormContact.styled';\n// import PropTypes from 'prop-types';\n// import { useState } from 'react';\n// import { useDispatch } from 'react-redux';\n// import { register } from 'redux/auth/authOperations';\n\n// export default function FormRegistration() {\n//   const [name, setName] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const dispatch = useDispatch();\n\n//   const handleClickChange = e => {\n//     const { name, value } = e.currentTarget;\n//     if (name === 'name') {\n//       setName(value);\n//       return;\n//     }\n//     if (name === 'email') {\n//       setEmail(value);\n//       return;\n//     }\n//     if (name === 'password') {\n//     }\n//     setPassword(value);\n//   };\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     dispatch(register({name, email,password}));\n//     resetForm();\n//   };\n\n//   const resetForm = e => {\n//     setEmail('');\n//     setPassword('');\n//   };\n\n//   return (\n//     <>\n//       <Form onSubmit={handleSubmit}>\n//         <Label>\n//           <Input\n//             type=\"text\"\n//             name=\"name\"\n//             value={name}\n//             onChange={handleClickChange}\n//             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//             placeholder=\"Enter name\"\n//             required\n//           />\n//         </Label>\n//         <Label>\n//           <Input\n//             type=\"text\"\n//             name=\"email\"\n//             value={email}\n//             onChange={handleClickChange}\n//             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//             placeholder=\"Enter email\"\n//             required\n//           />\n//         </Label>\n//         <Label>\n//           <Input\n//             type=\"tel\"\n//             name=\"password\"\n//             value={password}\n//             onChange={handleClickChange}\n//             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//             placeholder=\"Enter password\"\n//             required\n//           />\n//         </Label>\n\n//         <Button type=\"submit\">SubmitUser</Button>\n//       </Form>\n//     </>\n//   );\n// }\n\n// FormRegistration.propTypes = {\n//   name: PropTypes.string,\n//   email: PropTypes.string,\n//   password: PropTypes.string,\n// };\n","import FormRegistration from 'components/FormRegisration/FormRegistration';\nexport default function Registration() {\n  return <FormRegistration />;\n}\n"],"names":["Login","styled","Container","Form","Box","Registrarion","validationSchema","Yup","shape","name","min","max","required","email","password","FormRegistration","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","values","register","handleSubmit","TextField","id","label","placeholder","margin","fullWidth","sx","height","marginBottom","value","onChange","handleChange","error","touched","Boolean","errors","helperText","type","Button","color","variant","Registration"],"sourceRoot":""}