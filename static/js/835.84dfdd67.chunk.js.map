{"version":3,"file":"static/js/835.84dfdd67.chunk.js","mappings":"+QAGaA,EAAQC,EAAAA,GAAAA,GAAH,qEAILC,EAAYD,EAAAA,GAAAA,KAAH,yCAGTE,EAAOF,EAAAA,GAAAA,KAAH,0BAIJG,EAAMH,EAAAA,GAAAA,IAAH,mN,kFCPHI,GANUJ,EAAAA,GAAAA,IAAH,+DAMCA,EAAAA,GAAAA,GAAH,iF,SCJH,SAASK,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,iCACE,SAACH,EAAD,UAAQE,IACPC,IAGN,C,uJCAKC,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,MAAOF,EAAAA,KAAaE,QAAQC,WAC5BC,SAAUJ,EAAAA,KAAaK,IAAI,GAAGC,IAAI,IAAIH,aAGzB,SAASI,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbV,MAAO,GACPE,SAAU,IAEZL,iBAAkBA,EAClBc,SAAU,SAAAC,GACRN,GAASO,EAAAA,EAAAA,IAAOD,GACjB,IAGH,OACE,UAAC,KAAD,YACE,SAAC,KAAD,WACE,SAAC,KAAD,uBAEF,UAAC,KAAD,CAAMD,SAAUH,EAAOM,aAAvB,WACE,SAACC,EAAA,EAAD,CACEC,GAAG,QACHC,KAAK,QACLC,MAAM,QACNC,YAAY,mBACZC,OAAO,OACPC,WAAS,EACTC,GAAI,CACFC,OAAQ,GACRC,aAAc,GAEhBC,MAAOjB,EAAOI,OAAOZ,MACrB0B,SAAUlB,EAAOmB,aACjBC,MAAOpB,EAAOqB,QAAQ7B,OAAS8B,QAAQtB,EAAOuB,OAAO/B,OACrDgC,WAAYxB,EAAOqB,QAAQ7B,OAASQ,EAAOuB,OAAO/B,SAEpD,SAACe,EAAA,EAAD,CACEC,GAAG,WACHC,KAAK,WACLC,MAAM,WACNe,KAAK,WACLd,YAAY,sBACZC,OAAO,OACPC,WAAS,EACTC,GAAI,CAAEC,OAAQ,GAAIC,aAAc,GAChCC,MAAOjB,EAAOI,OAAOV,SACrBwB,SAAUlB,EAAOmB,aACjBC,MAAOpB,EAAOqB,QAAQ3B,UAAY4B,QAAQtB,EAAOuB,OAAO7B,UACxD8B,WAAYxB,EAAOqB,QAAQ3B,UAAYM,EAAOuB,OAAO7B,YAEvD,SAACgC,EAAA,EAAD,CAAQD,KAAK,SAASE,MAAM,UAAUC,QAAQ,YAAYf,WAAS,EAAnE,wBAMP,C,QCpEc,SAASgB,IACtB,OAAO,SAAChC,EAAD,GACR,C","sources":["components/FormLogin/FormLogin.styled.js","components/Section/Section.styled.js","components/Section/Section.jsx","components/FormLogin/FormLogin.jsx","pages/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\n\n\nexport const Login = styled.h2`\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const Container = styled.span`\n display: flex;\n`;\nexport const Form = styled.form`\n\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 100px;\n  margin-bottom: 10px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 440px;\n  line-height: 0.6;\n  gap: 10px;\n`;\n","import styled from 'styled-components';\nexport const Section = styled.div`\n  display: flex;\n  padding: 20px;\n \n`;\n\nexport const Title = styled.h2`\n  display: block;\n  text-align: center;\n  margin: 0;\n`;\n","import { Title } from './Section.styled';\nimport PropTypes from 'prop-types';\n\nexport default function Section({ title, children }) {\n  return (\n    <>\n      <Title>{title}</Title>\n      {children}\n    </>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import { Form, Box, Login, Container } from '../FormLogin/FormLogin.styled';\n// import Button from '@mui/material/Button';\nimport { Button } from '@mui/material';\nimport TextField from '@mui/material/TextField';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useFormik } from 'formik';\nimport { logIn } from 'redux/auth/authOperations';\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().email().required(),\n  password: Yup.string().min(6).max(32).required(),\n});\n\nexport default function FormLogin() {\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      dispatch(logIn( values));\n    },\n  });\n\n  return (\n    <Box>\n      <Container>\n        <Login>Login</Login>\n      </Container>\n      <Form onSubmit={formik.handleSubmit}>\n        <TextField\n          id=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          placeholder=\"Enter your email\"\n          margin=\"none\"\n          fullWidth\n          sx={{\n            height: 50,\n            marginBottom: 3,\n          }}\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <TextField\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          placeholder=\"Enter your password\"\n          margin=\"none\"\n          fullWidth\n          sx={{ height: 50, marginBottom: 3 }}\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n        <Button type=\"submit\" color=\"primary\" variant=\"contained\" fullWidth>\n          Login\n        </Button>\n      </Form>\n    </Box>\n  );\n}\nFormLogin.propTypes = {\n  email: PropTypes.string,\n  password: PropTypes.string,\n};\n\n// import { Form, Label, Input, Button } from '../FormContact/FormContact.styled'\n// import PropTypes from 'prop-types';\n// import { useState } from 'react';\n// import { useDispatch} from 'react-redux';\n// import { logIn } from 'redux/auth/authOperations';\n\n// export default function FormLogin() {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const dispatch = useDispatch();\n\n//   const handleClickChange = e => {\n//     const { name, value} = e.currentTarget;\n//     if (name === 'email') {\n//       setEmail(value);\n//       return;\n//     }\n//     if (name === 'password') {\n//     }\n//     setPassword(value);\n//   };\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     dispatch(logIn({email, password}));\n//     resetForm();\n//   };\n\n//   const resetForm = e => {\n//     setEmail('');\n//     setPassword('');\n//   };\n\n//   return (\n//     <>\n//       <Form onSubmit={handleSubmit}>\n//         <Label>\n//           <Input\n//             type=\"text\"\n//             name=\"email\"\n//             value={email}\n//             onChange={handleClickChange}\n//             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//             placeholder=\"Enter email\"\n//             required\n//           />\n//         </Label>\n//         <Label>\n//           <Input\n//             type=\"tel\"\n//             name=\"password\"\n//             value={password}\n//             onChange={handleClickChange}\n//             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//             placeholder=\"Enter password\"\n//             required\n//           />\n//         </Label>\n\n//         <Button type=\"submit\">SubmitLogin</Button>\n//       </Form>\n//     </>\n//   );\n// }\n\n// FormLogin.propTypes = {\n//  email: PropTypes.string,\n//   password: PropTypes.string,\n// };\n","import FormLogin from 'components/FormLogin/FormLogin';\nimport Section from 'components/Section/Section';\n\nexport default function Registration() {\n  return <FormLogin />;\n}\n"],"names":["Login","styled","Container","Form","Box","Title","Section","title","children","validationSchema","Yup","shape","email","required","password","min","max","FormLogin","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","values","logIn","handleSubmit","TextField","id","name","label","placeholder","margin","fullWidth","sx","height","marginBottom","value","onChange","handleChange","error","touched","Boolean","errors","helperText","type","Button","color","variant","Registration"],"sourceRoot":""}